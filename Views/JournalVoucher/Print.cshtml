@using Accounting_System.Utility
@using Accounting_System.Models.ViewModels
@model JournalVoucherVM
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Journal Voucher";
    var totalDebit = 0m;
    var totalCredit = 0m;
}
<br />
<div class="text-end">
    <img src="~/img/Filpride.jpg" height="" width="130px" />
</div>
<div class="text-center">
    <h2><u><b>&nbsp;FILPRIDE RESOURCES INC.&nbsp;</b></u></h2>
    <p style="line-height: 1; margin-top:-7px;">
        57 Westgate Office, Sampson Road, CBD, Subic Bay Freeport Zone,<br />
        Kalaklan, Olongapo City, 2200 Zambales, Philippines<br />
        VAT Reg. TIN: 000-216-589-00000
    </p>
    <h3><span style="display: inline-block;"><b>JOURNAL VOUCHER</b></span></h3>
    <div class="text-end" style="margin-top:-60px;">
        <h6><b>No.&nbsp;@Html.DisplayFor(model => model.Header.JVNo)</b></h6>
    </div>
</div>
<div class="table-responsive" style="margin-top:50px;">
    <table class="w-100">
        <tbody>
            <tr>
                <td></td>
                <td></td>
                <td></td>
                <td class="w-25 text-end">Date : @Model.Header.Date.ToString("MM/dd/yyyy")</td>
            </tr>
            <tr>
                <td>CATEGORY : </td>
                <td>
                    @if (Model.Header.CheckVoucherHeader != null)
                    {
                        @Html.DisplayFor(model => model.Header.CheckVoucherHeader.Category)
                    }
                </td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <td>REFERENCES</td>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <td>CV # :</td>
                <td>
                    @if (Model.Header.CheckVoucherHeader != null)
                    {
                        @Html.DisplayFor(model => model.Header.CheckVoucherHeader.CVNo)
                    }
                </td>
                <td>CR # :</td>
                <td></td>
            </tr>
            <tr>
                <td>CHECK # :</td>
                <td>
                    @if (Model.Header.CheckVoucherHeader != null)
                    {
                        @Html.DisplayFor(model => model.Header.CheckVoucherHeader.CheckNo)
                    }
                </td>
                <td>AMOUNT :</td>
                <td>
                    @if (Model.Header.CheckVoucherHeader != null)
                    {
                        @Html.DisplayFor(model => model.Header.CheckVoucherHeader.Total)
                    }
                </td>
            </tr>
            <tr>
                <td>CV DATE</td>
                <td>
                    @if (Model.Header.CheckVoucherHeader != null)
                    {
                        @Model.Header.CheckVoucherHeader.Date.ToString("MM/dd/yyyy")
                    }
                </td>
                <td>DATE :</td>
                <td>
                    @if (Model.Header.CheckVoucherHeader != null)
                    {
                        @Model.Header.CheckVoucherHeader.CheckDate?.ToString("MM/dd/yyyy")
                    }
                </td>
            </tr>
            <tr class="text-nowrap">
                <td>PAYEE</td>
                <td>
                    @if (Model.Header.CheckVoucherHeader != null)
                    {
                        @Html.DisplayFor(model => model.Header.CheckVoucherHeader.Payee)
                    }
                </td>
                <td>JV Reason :</td>
                <td><p style="margin: 0; padding: 0; text-align: justify">@Html.DisplayFor(model => model.Header.JVReason)</p></td>
            </tr>
            <tr>
                <td>PARTICULARS:</td>
                <td><pre class="pre">@Html.DisplayFor(model => model.Header.Particulars)</pre></td>
                <td></td>
                <td></td>
            </tr>
        </tbody>
    </table>
</div>
<div class="table-responsive" style="margin-top:20px;">
    <table class="w-100">
        <thead>
            <tr style="border: 1px solid black;">
                <th colspan="4" style="padding-left:20px;">ACCOUNTING ENTRIES</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td style="padding-left:20px;"><i>Account Name/Title</i></td>
                <th class="text-end">DEBIT</th>
                <th class="text-end">CREDIT</th>
            </tr>
            @foreach (var jvd in Model.Details)
            {
                <tr>
                    <td style="width:60%; padding-left:20px;">@Html.DisplayFor(model => jvd.AccountNo)&nbsp;@Html.DisplayFor(model => jvd.AccountName)</td>
                    <td class="text-end" style="width:7%;">@Html.DisplayFor(model => jvd.Debit)</td>
                    <td class="text-end" style="width:7%;">@Html.DisplayFor(model => jvd.Credit)</td>
                </tr>
                totalDebit += jvd.Debit;
                totalCredit += jvd.Credit;
            }
            <tr style="border-bottom:double;"></tr>
            <tr>
                <th class="text-end">TOTAL</th>
                <th class="text-end">@totalDebit</th>
                <th class="text-end">@totalCredit</th>
            </tr>
        </tbody>
    </table>
</div>
<div class="table-responsive" style="margin-top:20px;">
    <table class="w-100">
        <tbody class="text-center">
            <tr>
                <td>Prepared by :</td>
                <td>Reviewed by </td>
                <td>Approved by </td>
            </tr>
            <tr>
                <td style="width:33%;">
                    <br />
                    <span class="underline" style="display: inline-block; width:60%;">&nbsp;</span> <br />

                </td>
                <td style="width:33%;">
                    <br />
                    <span class="underline" style="display: inline-block; width:60%;">&nbsp;</span> <br />

                </td>
                <td style="width:33%;">
                    <br />
                    <span class="underline" style="display: inline-block; width:60%;">&nbsp;</span> <br />

                </td>
            </tr>
        </tbody>
    </table>
</div>
<br />
<div class="text-center w-100" style="margin-top:20px;">
    <p >
        <em><strong>"THIS DOCUMENT IS NOT VALID FOR CLAIM OF INPUT TAX"</strong></em><br /><br />
        <span>Acknowledgement Certificate No:</span>
        <span style="display: inline-block;">@CS.ACCN</span>
        <span>&nbsp;&nbsp;Date Issued:</span>
        <span style="display: inline-block;">@CS.DateIssued</span><br />
        Series: JV0000000001 - JV9999999999
        Date and Time Created:&nbsp; @Model.Header.CreatedDate
    </p>
</div>
<br />
<div class="text-start w-100 footer" style="margin-top:50px;">
    <p style="line-height: 1;">
        <em>
            <strong>Software Name :</strong> Accounting Administration System (AAS)
            <br />
            <strong>Version :</strong> @CS.Version
            <br />
            <strong>Printed By :</strong> @UserManager.GetUserName(User).ToUpper()
            <br />
            <strong>Date & Time Printed :</strong> @DateTime.Now.ToString("MM/dd/yyyy hh:mm tt")
        </em>
    </p>
</div>
@if (!Model.Header.IsPrinted)
{
    <div class="text-end">
        ORIGINAL COPY
    </div>
}
else
{
    <div class="text-end">
        REPRINT COPY
    </div>
}
<div>
    @if (!Model.Header.IsPosted)
    {
        <a id="approveButton" class="btn btn-success" onclick="confirmPost(@Model.Header.Id)" style="margin-top: 25px;">Post</a>
    }
    else
    {
        <a asp-action="Printed" class="btn btn-success" asp-route-id="@Model.Header.Id" onclick="printPage()" style="margin-top: 25px;" id="printButton">Print</a>
    }
    <a asp-action="Index" class="btn" style="margin-top: 25px;" id="otherButton">Back</a>
</div>
@section Scripts {
    <script>
        function confirmPost(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Post'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Replace with the actual URL that you want to redirect to
                    var url = `@Url.Action("Post", "JournalVoucher")/${id}`;
                    window.location.href = url;
                }
            })
        }
    </script>
    <script>
        var originalFontSizes = [];
        function printPage() {
            var printButton = document.getElementById("printButton");
            var otherButton = document.getElementById("otherButton");

            // Hide the header and footer
            document.querySelector("header").style.display = "none";

            // Hide the buttons before printing
            if (printButton) {
                printButton.style.visibility = "hidden";
            }
            if (otherButton) {
                otherButton.style.visibility = "hidden";
            }

            // Get all paragraph elements
            var paragraphs = document.querySelectorAll("p");

            // Store the original font sizes
            for (var i = 0; i < paragraphs.length; i++) {
                originalFontSizes[i] = paragraphs[i].style.fontSize;
                // Set the font size of all paragraph elements to 12px for printing
                paragraphs[i].style.fontSize = "12px";
            }

            // Get all table text elements
            var mytable = document.querySelectorAll("table");

            // Store the original font sizes
            for (var i = 0; i < mytable.length; i++) {
                originalFontSizes[i] = mytable[i].style.fontSize;
                // Set the font size of all paragraph elements to 12px for printing
                mytable[i].style.fontSize = "12px";
            }

            // Call the print function
            window.print();

            // Restore the font sizes
            for (var i = 0; i < paragraphs.length; i++) {
                paragraphs[i].style.fontSize = originalFontSizes[i];
            }

            // Restore the font sizes
            for (var i = 0; i < mytable.length; i++) {
                mytable[i].style.fontSize = originalFontSizes[i];
            }

            // Restore the buttons' visibility after printing (optional)
            if (printButton) {
                printButton.style.visibility = "visible";
            }
            if (otherButton) {
                otherButton.style.visibility = "visible";
            }

            // Restore the header and footer's visibility after printing (optional)
            document.querySelector("header").style.display = "";
        }
    </script>
}