@using Accounting_System.Models.AccountsPayable
@model PurchaseOrder

@{
    ViewData["Title"] = "CLOSE PURCHASE ORDER";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var postedQuantity = 0m;
    var unPostedQuantity = 0m;
}
<div class="loader-container">
    <div class="loader"></div>
    <div class="loader-text">Loading...</div>
</div>
<div class="card shadow border-0 mt-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">@ViewData["Title"]</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <form asp-action="ClosePO">
            <input asp-for="PurchaseOrderId" type="hidden" />
            <table class="table">
                <tbody>
                <tr>
                    <th class="w-50">PONo.</th>
                    <th class="w-50">Quantity</th>
                </tr>
                <tr>
                    <td>@Model.PurchaseOrderNo</td>
                    <td>@Model.Quantity</td>
                </tr>

                @if (Model.RrList!.Any(rr => rr.IsPosted))
                {
                    <tr>
                        <th>RRNo.(Posted RR)</th>
                        <th>Quantity</th>
                    </tr>

                    foreach (var rrPosted in Model.RrList!.Where(rr => rr.IsPosted))
                    {
                        <tr>
                            <td>@rrPosted.ReceivingReportNo</td>
                            <td>@rrPosted.QuantityReceived</td>
                        </tr>
                        postedQuantity += rrPosted.QuantityReceived;
                    }

                    var totalPostedQuantity = Model.Quantity - postedQuantity;
                    <tr>
                        <th class="text-end">Total Quantity(Only Posted RR):</th>
                        <td>@totalPostedQuantity</td>
                    </tr>
                }

                @if (Model.RrList!.Any(rr => !rr.IsPosted && !rr.IsCanceled))
                {
                    <tr>
                        <th>RRNo.(Unposted RR)</th>
                        <th>Quantity</th>
                    </tr>

                    foreach (var rrNotPosted in Model.RrList!.Where(rr => !rr.IsPosted && !rr.IsCanceled))
                    {
                        <tr>
                            <td>@rrNotPosted.ReceivingReportNo</td>
                            <td>@rrNotPosted.QuantityReceived</td>
                        </tr>
                        unPostedQuantity += rrNotPosted.QuantityReceived;
                    }

                    var totalUnPostedQuantity = unPostedQuantity + postedQuantity;
                    <tr>
                        <th class="text-end">Total Quantity(Posted and Unposted):</th>
                        <td>@totalUnPostedQuantity</td>
                    </tr>
                }
                </tbody>
            </table>
            <div class="row pt-2">
                <div class="col-6 col-md-3">
                    <button type="submit" class="btn btn-primary form-control">Close</button>
                </div>
                <div class="col-6 col-md-3">
                    <a asp-controller="PurchaseOrder" asp-action="Index" class="btn btn-outline-primary border  form-control ">Back to List</a>
                </div>
            </div>
        </form>
    </div>
</div>
@section Scripts
{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
