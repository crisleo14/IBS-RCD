@using System.ComponentModel.DataAnnotations;
@model Accounting_System.Models.DebitMemo

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Create</h1>
<partial name="_Notification">
<h4>Debit Memo</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <fieldset class="form-group">
                <legend>Select Source</legend>

                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" asp-for="Source" id="inlineRadio1" value="Sales Invoice" aria-labelledby="labelInlineRadio1" onclick="toggleSelect('siList')">
                    <label class="form-check-label" for="inlineRadio1" id="labelInlineRadio1">Sales Invoice</label>
                </div>

                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" asp-for="Source" id="inlineRadio2" value="Statement Of Account" aria-labelledby="labelInlineRadio2" onclick="toggleSelect('soaList')">
                    <label class="form-check-label" for="inlineRadio2" id="labelInlineRadio2">Statement Of Account</label>
                </div>
                <br />
                <span asp-validation-for="Source" class="text-danger"></span>
            </fieldset>
            <div class="form-group">
                <label asp-for="Date" class="control-label"></label>
                <input asp-for="Date" type="Date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group" id="siList">
                <label asp-for="SalesInvoiceId" class="control-label"></label>
                <select asp-for="SalesInvoiceId" asp-items="@Model.SalesInvoices" class="form-control js-select2" style="width:100%" required>
                    <option></option>
                </select>
                    <span asp-validation-for="SalesInvoiceId" class="text-danger"></span>
            <div class="form-group mt-3">
                <label asp-for="AdjustedPrice" class="control-label"></label>
                <input asp-for="AdjustedPrice" class="form-control moneyInput" required />
                <span asp-validation-for="AdjustedPrice" class="text-danger"></span>
            </div>
            <div class="form-group mb-3 mt-3">
                <label  class="control-label">Quantity</label>
                <input asp-for="Quantity" type="number" class="form-control" required />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            </div>
            <div class="form-group" id="soaList" style="display: none;">
                <label asp-for="SOAId" class="control-label"></label>
                    <select asp-for="SOAId" asp-items="@Model.StatementOfAccounts" class="form-control js-select2" style="width:100%" required>
                    <option></option>
                </select>
                    <span asp-validation-for="SOAId" class="text-danger"></span>

                    <div class="row g-2 mt-3">
                        <div class="col-sm mb-3">
                            <label asp-for="Period" class="control-label">Period</label>
                            <div id="periodContainer"></div>
                        </div>
                        <div class="col-sm">
                            <label asp-for="Amount" class="control-label">Amount</label>
                            <div id="amountContainer"></div>
                        </div>
                    </div>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" type="text" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Remarks" id="floatingInput" type="text" class="form-control" placeholder="Optional"/>
                <label for="floatingInput" class="control-label">Remarks</label>
                <span asp-validation-for="Remarks" class="text-danger"></span>
            </div>


            <br />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Get the current date in the format "YYYY-MM-DD" (required for the date input)
        var currentDate = new Date().toISOString().slice(0, 10);

        // Set the default value of the input field
        document.getElementById("CheckDate").value = currentDate;
    </script>
    <script>
        // Get the current date in the format "YYYY-MM-DD" (required for the date input)
        var myDate = new Date().toISOString().slice(0, 10);

        // Set the default value of the input field
        document.getElementById("Date").value = myDate;
    </script>
        <script>
            window.onload = function () {
                var inlineRadio1 = document.getElementById('inlineRadio1');
                var inlineRadio2 = document.getElementById('inlineRadio2');

                // Check the default radio button on page load
                if (inlineRadio1.checked) {
                    document.getElementById('siList').style.display = 'block';
                    document.getElementById('soaList').style.display = 'none';
                } else if (inlineRadio2.checked) {
                    document.getElementById('siList').style.display = 'none';
                    document.getElementById('soaList').style.display = 'block';
                }
            };

            function toggleSelect(id) {
                var siList = document.getElementById('siList');
                var soaList = document.getElementById('soaList');
                var inlineRadio1 = document.getElementById('inlineRadio1');
                var inlineRadio2 = document.getElementById('inlineRadio2');

                if (id === 'siList') {
                    siList.style.display = 'block';
                    soaList.style.display = 'none';
                    inlineRadio1.checked = true;
                    inlineRadio2.checked = false;
                } else if (id === 'soaList') {
                    siList.style.display = 'none';
                    soaList.style.display = 'block';
                    inlineRadio1.checked = false;
                    inlineRadio2.checked = true;
                }
            }
        </script>
        <script>
            var selectedSOAId = "";

            $(document).ready(function () {
                // Check the selected SOA ID on page load
                selectedSOAId = $("#SOAId").val();
                if (selectedSOAId !== "") {
                    // Make an AJAX request to get the SOA details based on the selected SOAId
                    $.ajax({
                        url: "/CreditMemo/GetSOADetails", // Replace with the actual controller and action names
                        method: "GET",
                        data: { soaId: selectedSOAId },
                        success: function (data) {
                            if (data) {
                                $("#periodContainer").empty(); // Clear previous entries
                                $("#amountContainer").empty(); // Clear previous entries
                                data.period.forEach(function (period, index) {
                                    var periodInputId = "period_" + index;
                                    var formattedPeriod = formatDate(period); // Format the period here
                                    $("#periodContainer").append('<input name="period" type="text" class="form-control mb-3" id="' + periodInputId + '" value="' + formattedPeriod + '" readonly/>');
                                });
                                data.amount.forEach(function (amount, index) {
                                    var amountInputId = "amount_" + index;
                                    $("#amountContainer").append('<input name="amount" class="form-control moneyInput mb-3" id="' + amountInputId + '" value="' + 0 + '" />');
                                });
                            } else {
                                // Clear the fields if no SOA is selected
                                $("#periodContainer").empty();
                                $("#amountContainer").empty();
                            }
                            console.log(data);
                        },
                        error: function () {
                            // If there's an error, retain the selected SOA ID and keep the input fields
                            $("#SOAId").val(selectedSOAId);
                            console.log("Error occurred. Retaining selected SOA ID and input fields.");
                        }
                    });
                }
            });

            $("#SOAId").change(function () {
                selectedSOAId = $(this).val();
                var soaId = selectedSOAId;
                console.log(soaId); // Add this line for debugging
                if (soaId !== "") {
                    // Make an AJAX request to get the SOA details based on the selected SOAId
                    $.ajax({
                        url: "/CreditMemo/GetSOADetails", // Replace with the actual controller and action names
                        method: "GET",
                        data: { soaId: soaId },
                        success: function (data) {
                            if (data) {
                                $("#periodContainer").empty(); // Clear previous entries
                                $("#amountContainer").empty(); // Clear previous entries
                                data.period.forEach(function (period, index) {
                                    var periodInputId = "period_" + index;
                                    var formattedPeriod = formatDate(period); // Format the period here
                                    $("#periodContainer").append('<input name="period" type="text" class="form-control mb-3" id="' + periodInputId + '" value="' + formattedPeriod + '" readonly/>');
                                });
                                data.amount.forEach(function (amount, index) {
                                    var amountInputId = "amount_" + index;
                                    $("#amountContainer").append('<input name="amount" class="form-control moneyInput mb-3" id="' + amountInputId + '" value="' + 0 + '" />');
                                });
                            } else {
                                // Clear the fields if no SOA is selected
                                $("#periodContainer").empty();
                                $("#amountContainer").empty();
                            }
                            console.log(data);
                        },
                        error: function () {
                            // If there's an error, retain the selected SOA ID and keep the input fields
                            $("#SOAId").val(selectedSOAId);
                            console.log("Error occurred. Retaining selected SOA ID and input fields.");
                        }
                    });
                } else {
                    // Clear the fields if no SOA is selected
                    $("#periodContainer").empty();
                    $("#amountContainer").empty();
                }
            });

            function formatDate(dateString) {
                var date = new Date(dateString);
                // Format the date as "Month Year" (e.g., "February 2024")
                var formattedDate = date.toLocaleString('default', { month: 'long' }) + ' ' + date.getFullYear();
                return formattedDate;
            }
        </script>
}
