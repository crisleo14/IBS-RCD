@using Accounting_System.Models.AccountsReceivable
@model SalesInvoice

@{
    ViewData["Title"] = "Edit Sales Invoice";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h1>Edit</h1>

<h4>SalesInvoice</h4>
<hr />
<form asp-action="Edit">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="mb-3">
        <div class="row">
            <div class="col">
                <div class="form-group mb-3">
                    <label asp-for="SINo" class="control-label"></label>
                    <input asp-for="SINo" class="form-control" disabled readonly />
                    <span asp-validation-for="SINo" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label class="control-label">Customer Name</label>
                    <select asp-for="CustomerId" asp-items="@Model.Customers" class="form-control js-select2" style="width:100%">
                        <option></option>
                    </select>
                    <span asp-validation-for="CustomerId" class="text-danger"></span>
                </div>

                <input type="hidden" id="soldTo" class="form-control" readonly disabled />

                <div class="form-group mb-3">
                    <label class="control-label">Tin No</label>
                    <input id="tinNo" class="form-control" value="@Model.Customer.TinNo" readonly disabled />
                </div>

                <div class="form-group mb-3">
                    <label class="control-label">Customer Type</label>
                    <input id="customerType" class="form-control" value="@Model.Customer.CustomerType" readonly disabled />
                </div>

                <div class="form-group mb-3">
                    <label class="control-label">Address</label>
                    <input id="address" class="form-control" value="@Model.Customer.Address" readonly disabled />
                </div>

                <div class="form-group mb-3">
                    <label class="control-label">Business Style</label>
                    <input id="businessStyle" class="form-control" value="@Model.Customer.BusinessStyle" readonly disabled />
                </div>

                <div class="form-group mb-3">
                    <label class="control-label">Terms</label>
                    <input id="terms" class="form-control" value="@Model.Customer.Terms" readonly disabled />
                </div>
            </div>
            <div class="col">
                <div class="form-group mb-3">
                    <label class="control-label">Product Name</label>
                    <select asp-for="ProductId" asp-items="@Model.Products" class="form-control GetPOList js-select2" style="width:100%">
                        <option></option>
                    </select>
                    <span asp-validation-for="ProductId" class="text-danger"></span>
                </div>

                <input type="hidden" id="productName" class="form-control" readonly disabled />

                <div class="form-group mb-3">
                    <label class="control-label">Unit</label>
                    <input id="productUnit" class="form-control" value="@Model.Product.Unit" readonly disabled />
                </div>
                <div class="form-group mb-3">
                    <label asp-for="Quantity" class="control-label"></label>
                    <input asp-for="Quantity" class="form-control money" />
                    <span asp-validation-for="Quantity" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="UnitPrice" class="control-label"></label>
                    <input asp-for="UnitPrice" class="form-control money" />
                    <span asp-validation-for="UnitPrice" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="Discount" class="control-label"></label>
                    <input asp-for="Discount" class="form-control moneyInput" />
                    <span asp-validation-for="Discount" class="text-danger"></span>
                </div>
            </div>

            @*   column 3 *@
            <div class="col">
                <div class="form-group mb-3">
                    <label asp-for="TransactionDate" class="control-label"></label>
                    <input type="date" asp-for="TransactionDate" class="form-control" data-existing-id="@Model.Id" />
                    <span asp-validation-for="TransactionDate" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="POId" class="control-label">Suppliers PO No.</label>
                    <select asp-for="POId" class="form-control js-select2 GetRRList" asp-items="@Model.PO">
                        <option></option>
                    </select>
                    <span asp-validation-for="POId" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="ReceivingReportId" class="control-label">RR No<span class="required">*</span></label>
                    <select asp-for="ReceivingReportId" class="form-control js-select2" asp-items="@Model.RR">
                        <option></option>
                    </select>
                    <span asp-validation-for="ReceivingReportId" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="OtherRefNo" class="control-label"></label>
                    <input asp-for="OtherRefNo" class="form-control" />
                    <span asp-validation-for="OtherRefNo" class="text-danger"></span>
                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="Remarks" class="control-label"></label>
        <textarea asp-for="Remarks" class="form-control" placeholder="Leave a remarks here" style="height: 100px"></textarea>
        <span asp-validation-for="Remarks" class="text-danger"></span>
    </div>
    <br />

    <input type="hidden" asp-for="Id" />
    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </div>
</form>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(function () {
            $("#CustomerId").change(function () {
                var customerId = $(this).val();
                if (customerId !== "") {
                    // Make an AJAX request to get the customer details based on the selected CustomerId
                    $.ajax({
                        url: "/SalesInvoice/GetCustomerDetails", // Replace with the actual controller and action names
                        method: "GET",
                        data: { customerId: customerId },
                        success: function (data) {
                            console.log(data);
                            if (data) {
                                $("#soldTo").val(data.soldTo);
                                $("#address").val(data.address);
                                $("#tinNo").val(data.tinNo);
                                $("#businessStyle").val(data.businessStyle);
                                $("#terms").val(data.terms);
                                $("#customerType").val(data.customerType);
                                $("#withHoldingTax").val(data.withHoldingTax);
                                // Populate other fields as needed
                            } else {
                                // Clear the fields if no customer is selected
                                $("#soldTo").val("");
                                $("#address").val("");
                                $("#tinNo").val("");
                                $("#businessStyle").val("");
                                $("#terms").val("");
                                $("#customerType").val("");
                                $("#withHoldingTax").val(data.withHoldingTax);
                                // Clear other fields as needed
                            }
                        }
                    });
                } else {
                    // Clear the fields if no customer is selected
                    $("#soldTo").val("");
                    $("#address").val("");
                    $("#tinNo").val("");
                    $("#businessStyle").val("");
                    $("#terms").val("");
                    $("#customerType").val("");
                    $("#withHoldingTax").val(data.withHoldingTax);
                    // Clear other fields as needed
                }
            });
            $("#ProductId").change(function () {
                var productId = $(this).val();
                if (productId !== "") {
                    // Make an AJAX request to get the customer details based on the selected CustomerId
                    $.ajax({
                        url: "/SalesInvoice/GetProductDetails", // Replace with the actual controller and action names
                        method: "GET",
                        data: { productId: productId },
                        success: function (data) {
                            console.log(data);
                            if (data) {
                                $("#productName").val(data.productName);
                                $("#productUnit").val(data.productUnit);
                            } else {
                                // Clear the fields if no customer is selected
                                $("#productName").val("");
                                $("#productUnit").val("");
                            }
                        }
                    });
                } else {
                    // Clear the fields if no customer is selected
                    $("#productName").val("");
                    $("#productUnit").val("");
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            // GetPOList change event
            $(".GetPOList").change(function () {
                var productId = $(this).val();
                if (productId !== "") {
                    // Make an AJAX request to get the POs based on the selected SupplierId
                    $.ajax({
                        url: "/SalesInvoice/GetPOs",
                        method: "GET",
                        data: { productId: productId },
                        success: function (data) {
                            if (data) {
                                // Clear existing options
                                $("#POId").empty();
                                // Add "No Value" option
                                $('#POId').append('<option value="">Select PO</option>');
                                // Add new options based on the fetched data
                                $.each(data, function (index, po) {
                                    if (po && po.poNumber) {
                                        $('#POId').append('<option value="' + po.id + '">' + po.poNumber + '</option>');
                                    }
                                });
                            } else {
                                // Clear the fields if no POs are found
                                $("#POId").empty();
                                $('#POId').append('<option value="">No Value</option>');
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching POs:', error);
                        }
                    });
                } else {
                    // Clear the fields if no supplier is selected
                    $("#POId").empty();
                    $('#POId').append('<option value="">No Value</option>');
                }
            });

            $(".GetRRList").change(function () {
                var purchaseOrderId = $(this).val();
                if (purchaseOrderId !== "") {
                    // Make an AJAX request to get the RRs based on the selected PurchaseOrderId
                    $.ajax({
                        url: "/SalesInvoice/GetRRs",
                        method: "GET",
                        data: { purchaseOrderId: purchaseOrderId },
                        success: function (data) {
                            if (data) {
                                // Clear existing options in the RR dropdown
                                $("#ReceivingReportId").empty();

                                $('#ReceivingReportId').append('<option value="">Select RR</option>');
                                // Reset transaction date
                                $("input[name='TransactionDate']").val("");

                                $.each(data, function (index, rr) {
                                    if (rr && rr.rrNo && rr.receivedDate) {
                                        $('#ReceivingReportId').append('<option value="' + rr.id + '" data-rr-date="' + rr.receivedDate + '">' + rr.rrNo + '</option>');
                                    } else {
                                        console.error("Invalid RR object:", rr);
                                    }
                                });

                                // If only one RR is returned, auto-select it and set the TransactionDate
                                if (data.length === 1) {
                                    $("#ReceivingReportId").val(data[0].id);
                                    $("input[name='TransactionDate']").val(data[0].receivedDate);
                                }
                            } else {
                                // Clear the fields if no RRs are found
                                $("#ReceivingReportId").empty();
                                $("input[name='TransactionDate']").val("");
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching RRs:', error);
                        }
                    });
                } else {
                    // Clear the fields if no PO is selected
                    $("#ReceivingReportId").empty();
                    $("input[name='TransactionDate']").val("");
                }
            });

            // Update TransactionDate when an RR is selected
            $("#ReceivingReportId").change(function () {
                var rrId = $(this).val();
                if (rrId !== "") {
                    var selectedRR = $(this).find("option:selected").data("rr-date");
                    console.log(selectedRR);
                    $("input[name='TransactionDate']").val(selectedRR);
                }
            });
        });
    </script>
}
