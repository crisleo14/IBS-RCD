@using Accounting_System.Models.AccountsReceivable
@model SalesInvoice

@{
    ViewData["Title"] = "EDIT SALES INVOICE";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="loader-container">
    <div class="loader"></div>
    <div class="loader-text">Loading...</div>
</div>
<div class="card shadow border-0 mt-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">@ViewData["Title"]</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="mb-3">
                <div class="row">
                    <div class="col">
                        <div class="form-group mb-3">
                            <label asp-for="SalesInvoiceNo" class="control-label"></label>
                            <input asp-for="SalesInvoiceNo" class="form-control" disabled readonly />
                            <span asp-validation-for="SalesInvoiceNo" class="text-danger"></span>
                        </div>
                        <div class="form-group mb-3">
                            <label class="control-label">Customer Name</label>
                            <select asp-for="CustomerId" asp-items="@Model.Customers" class="form-control js-select2" style="width:100%">
                                <option></option>
                            </select>
                            <span asp-validation-for="CustomerId" class="text-danger"></span>
                        </div>

                        <input type="hidden" id="soldTo" class="form-control" readonly disabled />

                        <div class="form-group mb-3">
                            <label class="control-label">Tin No</label>
                            <input id="tinNo" class="form-control" value="@Model.Customer?.CustomerTin" readonly disabled />
                        </div>

                        <div class="form-group mb-3">
                            <label class="control-label">Customer Type</label>
                            <input id="customerType" class="form-control" value="@Model.Customer?.CustomerType" readonly disabled />
                        </div>

                        <div class="form-group mb-3">
                            <label class="control-label">Address</label>
                            <input id="address" class="form-control" value="@Model.Customer?.CustomerAddress" readonly disabled />
                        </div>

                        <div class="form-group mb-3">
                            <label class="control-label">Business Style</label>
                            <input id="businessStyle" class="form-control" value="@Model.Customer?.BusinessStyle" readonly disabled />
                        </div>

                        <div class="form-group mb-3">
                            <label class="control-label">Terms</label>
                            <input id="terms" class="form-control" value="@Model.Customer?.CustomerTerms" readonly disabled />
                        </div>
                    </div>
                    <div class="col">
                        <div class="form-group mb-3">
                            <label class="control-label">Product Name</label>
                            <select asp-for="ProductId" asp-items="@Model.Products" class="form-control GetPOList js-select2" style="width:100%">
                                <option></option>
                            </select>
                            <span asp-validation-for="ProductId" class="text-danger"></span>
                        </div>

                        <input type="hidden" id="productName" class="form-control" readonly disabled />

                        <div class="form-group mb-3">
                            <label class="control-label">Unit</label>
                            <input id="productUnit" class="form-control" value="@Model.Product?.ProductUnit" readonly disabled />
                        </div>
                        <div class="form-group mb-3">
                            <label asp-for="Quantity" class="control-label"></label>
                            <input asp-for="Quantity" class="form-control money" />
                            <span asp-validation-for="Quantity" class="text-danger"></span>
                        </div>
                        <div class="form-group mb-3">
                            <label asp-for="UnitPrice" class="control-label"></label>
                            <input asp-for="UnitPrice" class="form-control money" />
                            <span asp-validation-for="UnitPrice" class="text-danger"></span>
                        </div>
                        <div class="form-group mb-3">
                            <label asp-for="Discount" class="control-label"></label>
                            <input asp-for="Discount" class="form-control moneyInput" />
                            <span asp-validation-for="Discount" class="text-danger"></span>
                        </div>
                    </div>

                    @*   column 3 *@
                    <div class="col">
                        <div class="form-group mb-3">
                            <label asp-for="TransactionDate" class="control-label"></label>
                            <input type="date" asp-for="TransactionDate" class="form-control" data-existing-id="@Model.SalesInvoiceId" />
                            <span asp-validation-for="TransactionDate" class="text-danger"></span>
                        </div>
                        <div class="form-group mb-3">
                            <label asp-for="OtherRefNo" class="control-label"></label>
                            <input asp-for="OtherRefNo" class="form-control" />
                            <span asp-validation-for="OtherRefNo" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Remarks" class="control-label"></label>
                <textarea asp-for="Remarks" class="form-control" placeholder="Leave a remarks here" style="height: 100px"></textarea>
                <span asp-validation-for="Remarks" class="text-danger"></span>
            </div>
            <br />
            <input type="hidden" asp-for="SalesInvoiceId" />
            <div class="row pt-2">
                <div class="col-6 col-md-3">
                    <button type="submit" class="btn btn-primary form-control">Save</button>
                </div>
                <div class="col-6 col-md-3">
                    <a asp-controller="SalesInvoice" asp-action="Index" class="btn btn-outline-primary border  form-control ">Back to List</a>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(function () {
            $("#CustomerId").change(function () {
                let customerId = $(this).val();
                if (customerId !== "") {
                    // Make an AJAX request to get the customer details based on the selected CustomerId
                    $.ajax({
                        url: '@Url.Action("GetCustomerDetails", "SalesInvoice")',
                        method: "GET",
                        data: { customerId: customerId },
                        success: function (data) {
                            if (data) {
                                $("#soldTo").val(data.soldTo);
                                $("#address").val(data.address);
                                $("#tinNo").val(data.tinNo);
                                $("#businessStyle").val(data.businessStyle);
                                $("#terms").val(data.terms);
                                $("#customerType").val(data.customerType);
                                $("#withHoldingTax").val(data.withHoldingTax);
                                // Populate other fields as needed
                            } else {
                                // Clear the fields if no customer is selected
                                $("#soldTo").val("");
                                $("#address").val("");
                                $("#tinNo").val("");
                                $("#businessStyle").val("");
                                $("#terms").val("");
                                $("#customerType").val("");
                                $("#withHoldingTax").val(data.withHoldingTax);
                                // Clear other fields as needed
                            }
                        }
                    });
                } else {
                    // Clear the fields if no customer is selected
                    $("#soldTo").val("");
                    $("#address").val("");
                    $("#tinNo").val("");
                    $("#businessStyle").val("");
                    $("#terms").val("");
                    $("#customerType").val("");
                    $("#withHoldingTax").val(data.withHoldingTax);
                    // Clear other fields as needed
                }
            });
            $("#ProductId").change(function () {
                let productId = $(this).val();
                if (productId !== "") {
                    // Make an AJAX request to get the customer details based on the selected CustomerId
                    $.ajax({
                        url: '@Url.Action("GetProductDetails", "SalesInvoice")',
                        method: "GET",
                        data: { productId: productId },
                        success: function (data) {
                            if (data) {
                                $("#productName").val(data.productName);
                                $("#productUnit").val(data.productUnit);
                            } else {
                                // Clear the fields if no customer is selected
                                $("#productName").val("");
                                $("#productUnit").val("");
                            }
                        }
                    });
                } else {
                    // Clear the fields if no customer is selected
                    $("#productName").val("");
                    $("#productUnit").val("");
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            // GetPOList change event
            $(".GetPOList").change(function () {
                let productId = $(this).val();
                if (productId !== "") {
                    // Make an AJAX request to get the POs based on the selected SupplierId
                    $.ajax({
                        url: '@Url.Action("GetPOs", "SalesInvoice")',
                        method: "GET",
                        data: { productId: productId },
                        success: function (data) {
                            if (data) {
                                // Clear existing options
                                $("#POId").empty();
                                // Add "No Value" option
                                $('#POId').append('<option value="">Select PO</option>');
                                // Add new options based on the fetched data
                                $.each(data, function (index, po) {
                                    if (po && po.poNumber) {
                                        $('#POId').append('<option value="' + po.id + '">' + po.poNumber + '</option>');
                                    }
                                });
                            } else {
                                // Clear the fields if no POs are found
                                $("#POId").empty();
                                $('#POId').append('<option value="">No Value</option>');
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching POs:', error);
                        }
                    });
                } else {
                    // Clear the fields if no supplier is selected
                    $("#POId").empty();
                    $('#POId').append('<option value="">No Value</option>');
                }
            });

            let receivingReportId = $("#ReceivingReportId");
            let transactionDate = $("input[name='TransactionDate']");
            
            $(".GetRRList").change(function () {
                let purchaseOrderId = $(this).val();
                if (purchaseOrderId !== "") {
                    // Make an AJAX request to get the RRs based on the selected PurchaseOrderId
                    $.ajax({
                        url: '@Url.Action("GetRRs", "SalesInvoice")',
                        method: "GET",
                        data: { purchaseOrderId: purchaseOrderId },
                        success: function (data) {
                            if (data) {
                                // Clear existing options in the RR dropdown
                                receivingReportId.empty();

                                receivingReportId.append('<option value="">Select RR</option>');
                                // Reset transaction date
                                transactionDate.val("");

                                $.each(data, function (index, rr) {
                                    if (rr && rr.rrNo && rr.receivedDate) {
                                        receivingReportId.append('<option value="' + rr.id + '" data-rr-date="' + rr.receivedDate + '">' + rr.rrNo + '</option>');
                                    } else {
                                        console.error("Invalid RR object:", rr);
                                    }
                                });

                                // If only one RR is returned, auto-select it and set the TransactionDate
                                if (data.length === 1) {
                                    receivingReportId.val(data[0].id);
                                    transactionDate.val(data[0].receivedDate);
                                }
                            } else {
                                // Clear the fields if no RRs are found
                                receivingReportId.empty();
                                transactionDate.val("");
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching RRs:', error);
                        }
                    });
                } else {
                    // Clear the fields if no PO is selected
                    receivingReportId.empty();
                    transactionDate.val("");
                }
            });

            // Update TransactionDate when an RR is selected
            receivingReportId.change(function () {
                let rrId = $(this).val();
                if (rrId !== "") {
                    let selectedRR = $(this).find("option:selected").data("rr-date");
                    transactionDate.val(selectedRR);
                }
            });
        });
    </script>
}
