@using Accounting_System.Models.ViewModels
@model IEnumerable<Inventory>

@{
    ViewData["Title"] = "Inventory Report";
    decimal totalAmount = 0m;
    decimal totalQty = 0m;
    decimal totalPrice = 0m;
}

<div class="mb-3">
    <h5>Product Name: @ViewData["Product"]</h5>
</div>

<div class="table-responsive">
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Particulars</th>
                <th>Reference</th>
                <th class="text-end">Quantity</th>
                <th class="text-end">Cost</th>
                <th class="text-end">Total</th>
                <th class="text-end">Inventory Balance</th>
                <th class="text-end">Unit Cost Average</th>
                <th class="text-end">Total Balance</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @if (ViewBag.ProductId != null && ViewBag.POId != null)
            {
                @foreach (var obj in Model.OrderBy(ir => ir.Date).ThenBy(ir => ir.Id))
                {
                    <tr>
                        <td>@obj.Date.ToString("MM/dd/yyyy")</td>
                        <td>@Html.DisplayFor(model => obj.Particular)</td>
                        <td>@Html.DisplayFor(model => obj.Reference)</td>
                        <td class="text-end">@Html.DisplayFor(model => obj.Quantity)</td>
                        <td class="text-end">@Html.DisplayFor(model => obj.Cost)</td>
                        <td class="text-end">@Html.DisplayFor(model => obj.Total)</td>
                        <td class="text-end">@Html.DisplayFor(model => obj.InventoryBalance)</td>
                        <td class="text-end">@Html.DisplayFor(model => obj.AverageCost)</td>
                        <td class="text-end">@Html.DisplayFor(model => obj.TotalBalance)</td>
                        <td>
                            @if (obj.IsValidated)
                            {
                                <span class="badge text-bg-primary">Validated</span>
                            }
                            else
                            {
                                <a href="#" onclick="confirmValidation(@obj.Id)" class="badge text-bg-warning" title="Click this to validate.">Validate</a>
                            }
                        </td>
                    </tr>
                }
            }
            else
            {
                @foreach (var obj in Model.Where(ir => ir.Particular.StartsWith("Beginning Balance")).OrderBy(ir => ir.Date).ThenBy(ir => ir.Id))
                {
                    totalAmount += obj.Total;
                    totalQty += obj.Quantity;
                    totalPrice = totalAmount != 0 && totalQty != 0 ? totalAmount / totalQty : obj.Cost;
                    <tr>
                        <td>@obj.Date.ToString("MM/dd/yyyy")</td>
                        <td>@Html.DisplayFor(model => obj.Particular)</td>
                        <td>@Html.DisplayFor(model => obj.Reference)</td>
                        <td class="text-end">@Html.DisplayFor(model => obj.Quantity)</td>
                        <td class="text-end">@Html.DisplayFor(model => obj.Cost)</td>
                        <td class="text-end">@Html.DisplayFor(model => obj.Total)</td>
                        <td class="text-end">@totalQty.ToString("N2")</td>
                        <td class="text-end">@totalPrice.ToString("N2")</td>
                        <td class="text-end">@totalAmount.ToString("N2")</td>
                        <td>
                            @if (obj.IsValidated)
                            {
                                <span class="badge text-bg-primary">Validated</span>
                            }
                            else
                            {
                                <a href="#" onclick="confirmValidation(@obj.Id)" class="badge text-bg-warning" title="Click this to validate.">Validate</a>
                            }
                        </td>
                    </tr>
                }
                @foreach (var obj in Model.Where(ir => !ir.Particular.StartsWith("Beginning Balance")).OrderBy(ir => ir.Date).ThenBy(ir => ir.Id))
                {
                    if (obj.Particular.StartsWith("Sales"))
                    {
                        totalAmount -= obj.Total;
                        totalQty -= obj.Quantity;
                        totalPrice = totalAmount != 0 && totalQty != 0 ? totalAmount / totalQty : obj.Cost;
                        <tr>
                            <td>@obj.Date.ToString("MM/dd/yyyy")</td>
                            <td>@Html.DisplayFor(model => obj.Particular)</td>
                            <td>@Html.DisplayFor(model => obj.Reference)</td>
                            <td class="text-end">@Html.DisplayFor(model => obj.Quantity)</td>
                            <td class="text-end">@Html.DisplayFor(model => obj.Cost)</td>
                            <td class="text-end">@Html.DisplayFor(model => obj.Total)</td>
                            <td class="text-end">@totalQty.ToString("N2")</td>
                            <td class="text-end">@totalPrice.ToString("N2")</td>
                            <td class="text-end">@totalAmount.ToString("N2")</td>
                            <td>
                                @if (obj.IsValidated)
                                {
                                    <span class="badge text-bg-primary">Validated</span>
                                }
                                else
                                {
                                    <a href="#" onclick="confirmValidation(@obj.Id)" class="badge text-bg-warning" title="Click this to validate.">Validate</a>
                                }
                            </td>
                        </tr>
                    }
                    else
                    {
                        totalAmount += obj.Total;
                        totalQty += obj.Quantity;
                        totalPrice = totalAmount != 0 && totalQty != 0 ? totalAmount / totalQty : obj.Cost;
                        <tr>
                            <td>@obj.Date.ToString("MM/dd/yyyy")</td>
                            <td>@Html.DisplayFor(model => obj.Particular)</td>
                            <td>@Html.DisplayFor(model => obj.Reference)</td>
                            <td class="text-end">@Html.DisplayFor(model => obj.Quantity)</td>
                            <td class="text-end">@Html.DisplayFor(model => obj.Cost)</td>
                            <td class="text-end">@Html.DisplayFor(model => obj.Total)</td>
                            <td class="text-end">@totalQty.ToString("N2")</td>
                            <td class="text-end">@totalPrice.ToString("N2")</td>
                            <td class="text-end">@totalAmount.ToString("N2")</td>
                            <td>
                                @if (obj.IsValidated)
                                {
                                    <span class="badge text-bg-primary">Validated</span>
                                }
                                else
                                {
                                    <a href="#" onclick="confirmValidation(@obj.Id)" class="badge text-bg-warning" title="Click this to validate.">Validate</a>
                                }
                            </td>
                        </tr>
                    }
                }
            }
        </tbody>
    </table>
</div>

<div class="row mt-5">
    <div class="col-6 col-md-3">
        <a onclick="window.print()" class="btn btn-primary form-control buttons">Print</a>
    </div>
    <div class="col-6 col-md-3">
        <a asp-controller="Inventory" asp-action="InventoryReport" class="btn btn-outline-primary border form-control buttons">Back</a>
    </div>
</div>

@section Scripts {
    <script>
        function confirmValidation(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'You are about to validate this inventory.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.isConfirmed) {
                    validateInventory(id);
                }
            });
        }

        function validateInventory(id) {
            $.ajax({
                url: '@Url.Action("ValidateInventory", "Inventory")',
                type: 'POST',
                data: { id: id },
                success: function () {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'The record was validated successfully.',
                        showConfirmButton: false,
                        timer: 1500 // Close the alert after 1.5 seconds
                    }).then(() => {
                        window.location.reload();
                    });
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to validate inventory.',
                        showConfirmButton: false,
                        timer: 1500 // Close the alert after 1.5 seconds
                    });
                }
            });
        }
    </script>
}