@using System.ComponentModel.DataAnnotations;
@model Accounting_System.Models.OfficialReceipt

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<partial name="_Notification">
<h1>Create</h1>

<h4>Official Receipt</h4>
<hr />
<div class="row">
    <div class="position-absolute p-2" style="left:40%; width:25%; border:dotted 1px;">
            <pre>
 <b>SOA Details</b>
 SOA Amount:     <span id="amount"></span>
 EWT:            <span id="ewt"></span>
 WVAT:           <span id="wvat"></span>
 =======================================
 Less EWT/WVAT:  <span id="total"></span>
 =======================================
 Amount Paid:    <span id="amountPaid"></span>
 Balance:        <span id="balance"></span>

            </pre>
        </div>
        <form asp-action="OfficialCreate">
            <div class="col-md-4">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group mb-3">
                    <label class="control-label">Customers</label>
                    <select asp-for="CustomerNo" asp-items="@Model.Customers" class="form-select js-select2" required>
                        <option></option>
                    </select>
                    <span asp-validation-for="CustomerNo" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label">SOA No.</label>
                    <select asp-for="SOAId" id="soa" asp-items="@Model.StatementOfAccounts" class="form-select js-select2">
                        <option></option>
                    </select>
                </div>
                <div class="form-group">
                    <label asp-for="Date" class="control-label"></label>
                    <input asp-for="Date" type="Date" class="form-control" />
                    <span asp-validation-for="Date" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ReferenceNo" class="control-label"></label>
                    <input asp-for="ReferenceNo" type="text" class="form-control" />
                    <span asp-validation-for="ReferenceNo" class="text-danger"></span>
                </div>
                <br />
                <div class="form-floating mb-3">
                    <input asp-for="Remarks" id="floatingInput" type="text" class="form-control" placeholder="Optional"/>
                    <label for="floatingInput" class="control-label">Remarks</label>
                    <span asp-validation-for="Remarks" class="text-danger"></span>
                </div>
         </div>

            <table class="table-bordered w-100">
                <tbody>
                    <tr>
                        <td colspan="6" style="padding-left:20px;">FORM OF PAYMENT</td>
                    </tr>
                    <tr>
                        <td class="text-center" style="width:25%"></td>
                        <td class="text-center" style="width:15%">DATE</td>
                        <td class="text-center" style="width:15%">CHK #</td>
                        <td class="text-center" style="width:15%">AMOUNT</td>
                    </tr>

                    <tr>
                        <td style="padding-left:20px;">Cash</td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input asp-for="CashAmount" style="border:none" class="form-control moneyInput" /></td>
                    </tr>

                    <tr>
                        <td style="padding-left:20px;">Check</td>
                        <td><input asp-for="CheckDate" type="date" style="border:none" class="form-control" /></td>
                        <td><input asp-for="CheckNo" style="border:none" class="form-control" /></td>
                        <td><input asp-for="CheckAmount" style="border:none" class="form-control moneyInput" /></td>
                    </tr>

                    <tr>
                        <td style="padding-left:20px;">EWT</td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input asp-for="EWT" style="border:none" class="form-control moneyInput" /></td>
                    </tr>
                    <tr>
                        <td style="padding-left:20px;">WVAT</td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input asp-for="WVAT" style="border:none" class="form-control moneyInput" /></td>
                    </tr>
                </tbody>
            </table>

            <div class="form-group">
                <hr />
                <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#AddAccEntry">
                    Add Entry
                </button>
                <table class="table">
                    <thead>
                        <tr>
                            <th class="w-100">Account Title</th>
                            <th class="w-20">
                                Amount
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody id="accountingEntriesBody">
                    </tbody>
                </table>
            </div>

            <br />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a asp-action="OfficialIndex" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
</div>

    <!-- Modal -->
    <div class="modal fade" id="AddAccEntry" tabindex="-1" aria-labelledby="AddAccEntryLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="AddAccEntryLabel">Add Accounting Entry</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form asp-action="Edit">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group">
                            <label class="control-label">Account Title</label>
                            <select id="AccountTitle" asp-items="@Model.ChartOfAccounts" class="form-select" style="width: 100%">
                                <option></option>
                            </select>
                            <span class="text-danger"></span>
                        </div>
                        <div class="form-group pt-4">
                            <label class="control-label">Amount</label>
                            <input id="AccountAmount" class="form-control moneyInput" />
                            <span class="text-danger"></span>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="saveAccountingEntry()">Save</button>
                </div>
            </div>
        </div>
    </div>

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
        <script>
            // Get the current date in the format "YYYY-MM-DD" (required for the date input)
            var myDate = new Date().toISOString().slice(0, 10);

            // Set the default value of the input field
            document.getElementById("Date").value = myDate;
        </script>
        <script>
            $(document).ready(function () {
                $("#CustomerNo").change(function () {
                    var customerNo = $(this).val();

                    $.ajax({
                        url: "/Receipt/GetStatementOfAccount",
                        type: "GET",
                        data: { customerNo: customerNo },
                        success: function (data) {

                            $("#soa").empty();

                            // Check if data is an array and not null
                            if (Array.isArray(data) && data.length > 0) {

                                document.getElementById("amount").innerHTML = "";
                                document.getElementById("amountPaid").innerHTML = "";
                                document.getElementById("balance").innerHTML = "";

                                $("#soa").append('<option>');

                                // Iterate over the array and append options
                                $.each(data, function (index, item) {
                                    $("#soa").append($('<option>', {
                                        value: item.value,   // Use the correct property for value
                                        text: item.text      // Use the correct property for text
                                    }));
                                });
                            } else {
                                // Handle the case where data is null or empty
                                console.log("No statement of account found for the selected customer.");
                            }
                        }
                    });
                });
            });
        </script>

        <script>
            function saveAccountingEntry() {
                // Get the values from the modal inputs
                var accountTitle = $("#AccountTitle").val();
                var accountTitleText = $("#AccountTitle option:selected").text();
                var accountAmount = $("#AccountAmount").val();

                console.log(accountTitle);
                console.log(accountTitleText);

                // Create a new row with the text only and a hidden input for the value
                var newRow = `<tr>
                                            <td>
                                                <input type='hidden' name='accountTitle' value='${accountTitle}' />
                                                <input type='text' name='accountTitleText' value='${accountTitleText}' style='border:none' readonly />
                                            </td>
                                                        <td><input type='text' name='accountAmount' value='${Number(accountAmount).toFixed(2)}' style='border:none' readonly /></td>
                                            <td><button type='button' class='btn btn-danger btn-sm' onclick='removeRow(this)'>Remove</button></td>
                                         </tr>`;

                // Append the new row to the table body
                $("#accountingEntriesBody").append(newRow);

                // Close the modal
                $("#AddAccEntry").modal("hide");

                // Clear the modal inputs
                $("#AccountTitle").val(""); // Reset the select to its default state
                $("#AccountTitle").trigger("change"); // Trigger change event for the select
                $("#AccountAmount").val("");
            }


            // Function to remove the corresponding row
            function removeRow(button) {
                // Get the reference to the button's parent row and remove it
                $(button).closest("tr").remove();
            }

        </script>

        <script>
            // Function to handle invoice change event
            function handleInvoiceChange() {
                var soaNo = $("#soa").val();

                if (soaNo != "") {
                    $.ajax({
                        url: "/Receipt/GetSOADetails",
                        type: "GET",
                        data: { soaNo: soaNo },
                        success: function (data) {
                            console.log(data);
                            document.getElementById("amount").innerHTML = data.amount;
                            document.getElementById("amountPaid").innerHTML = data.amountPaid;
                            document.getElementById("balance").innerHTML = data.balance;
                            document.getElementById("ewt").innerHTML = data.ewt;
                            document.getElementById("wvat").innerHTML = data.wvat;
                            document.getElementById("total").innerHTML = data.total;
                        }
                    });
                }
            }

            $(document).ready(function () {
                // Call the handleInvoiceChange function on page load
                handleInvoiceChange();

                // Attach event listener to invoice dropdown
                $("#soa").change(function () {
                    // Call the handleInvoiceChange function when the dropdown changes
                    handleInvoiceChange();
                });
            });
        </script>

        <script>
            $('#AccountTitle').select2({
                dropdownParent: $('#AddAccEntry')
            });
        </script>
    }
