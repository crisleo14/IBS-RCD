@using System.ComponentModel.DataAnnotations;
@using Accounting_System.Models.AccountsReceivable;
@model CollectionReceipt

@{
    ViewData["Title"] = "CREATE COLLECTION FOR SALES";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="card shadow border-0 mt-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">@ViewData["Title"]</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <form asp-action="MultipleCollectionCreateForSales" method="post" enctype="multipart/form-data">
            <div class="row">
                <div class="col-md-4">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group mb-3">
                        <label class="control-label">Customers<span class="required">*</span></label>
                        <select asp-for="CustomerId" asp-items="@Model.Customers" class="form-select js-select2" style="width:100%" required>
                            <option></option>
                        </select>
                        <span asp-validation-for="CustomerId" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="TransactionDate" class="control-label">Transaction Date<span class="required">*</span></label>
                        <input asp-for="TransactionDate" type="Date" class="form-control" />
                        <span asp-validation-for="TransactionDate" class="text-danger"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <input asp-for="ReferenceNo" id="floatingInput" type="text" class="form-control" placeholder="Reference #" />
                        <label for="floatingInput" class="control-label">Reference #<span class="required">*</span></label>
                        <span asp-validation-for="ReferenceNo" class="text-danger"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <input asp-for="Remarks" id="floatingInput" type="text" class="form-control" placeholder="Optional" />
                        <label for="floatingInput" class="control-label">Remarks</label>
                        <span asp-validation-for="Remarks" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label class="control-label">SI NO.<span class="required">*</span></label>
                        <select asp-for="MultipleSIId" id="invoices" asp-items="@Model.SalesInvoices" class="form-select js-multiple siNo" multiple="multiple" style="width:100%">
                            <option></option>
                        </select>
                        <span asp-validation-for="MultipleSIId" class="text-danger"></span>
                    </div>
                    <table class="table">
                        <thead>
                            <tr>
                                <th class="w-100">SI List</th>
                                <th class="w-20">Amount</th>
                            </tr>
                        </thead>
                        <tbody class="siList">
                        </tbody>
                    </table>
                </div>
                <div class="col-8">
                    <div class="row mb-3">
                        <table style="border:dotted 1px;">
                            <thead class="m-2">
                                <tr>
                                    <th colspan="6" class="text-center py-4">Invoice Details</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <th style="width:14%; padding-left:20px;">SI No's</th>
                                    <th class="text-end" style="width:14%;">Invoice Amount</th>
                                    <th class="text-end" style="width:14%;">WVat</th>
                                    <th class="text-end" style="width:14%;">EWT</th>
                                    <th class="text-end" style="width:14%; padding-right:20px;">Less EWT/WVat</th>
                                    <th class="text-end" style="width:14%;">Amount Paid</th>
                                    <th class="text-end" style="width:14%; padding-right:20px;">Balance</th>
                                </tr>
                            </tbody>
                            <tbody class="siAmount">
                            </tbody>
                            <tbody>
                                <tr style="border-bottom:double;">
                                    <td class="pt-1"></td>
                                </tr>
                                <tr>
                                    <td class="text-end fw-bold p-3">Grand Total:</td>
                                    <td class="text-end" id="grandTotalRRAmount">0.00</td>
                                    <td class="text-end" id="grandTotalVatAmount">0.00</td>
                                    <td class="text-end" id="grandTotalEWTAmount">0.00</td>
                                    <td class="text-end" id="grandTotalNetOfEWT">0.00</td>
                                    <td class="text-end" id="grandTotalAmountPaid">0.00</td>
                                    <td class="text-end" id="grandTotalBalance" style="padding-right:20px;">0.00</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <table class="table-bordered w-100">
                    <tbody>
                        <tr>
                            <td colspan="6" style="padding-left:20px;">FORM OF PAYMENT<span class="required">*</span></td>
                        </tr>
                        <tr>
                            <td class="text-center" style="width:25%"></td>
                            <td class="text-center" style="width:15%">DATE</td>
                            <td class="text-center" style="width:15%">CHK #</td>
                            <td class="text-center" style="width:15%">BANK</td>
                            <td class="text-center" style="width:15%">BRANCH</td>
                            <td class="text-center" style="width:15%">AMOUNT</td>
                        </tr>

                        <tr>
                            <td style="padding-left:20px;">Cash</td>
                            <td><input style="border:none" class="form-control" disabled /></td>
                            <td><input style="border:none" class="form-control" disabled /></td>
                            <td><input style="border:none" class="form-control" disabled /></td>
                            <td><input style="border:none" class="form-control" disabled /></td>
                            <td><input asp-for="CashAmount" style="border:none" class="form-control moneyInput" /></td>
                        </tr>

                        <tr>
                            <td style="padding-left:20px;">Check</td>
                            <td><input asp-for="CheckDate" type="date" style="border:none" class="form-control" /></td>
                            <td><input asp-for="CheckNo" style="border:none" class="form-control" /></td>
                            <td><input asp-for="CheckBank" style="border:none" class="form-control" /></td>
                            <td><input asp-for="CheckBranch" style="border:none" class="form-control" /></td>
                            <td><input asp-for="CheckAmount" style="border:none" class="form-control moneyInput" /></td>
                        </tr>

                        <tr>
                            <td style="padding-left:20px;">EWT</td>
                            <td><input style="border:none" class="form-control" disabled /></td>
                            <td><input style="border:none" class="form-control" disabled /></td>
                            <td><input style="border:none" class="form-control" disabled /></td>
                            <td><input style="border:none" class="form-control" disabled /></td>
                            <td><input asp-for="EWT" style="border:none" class="form-control moneyInput" /></td>
                        </tr>
                        <tr>
                            <td style="padding-left:20px;">WVAT</td>
                            <td><input style="border:none" class="form-control" disabled /></td>
                            <td><input style="border:none" class="form-control" disabled /></td>
                            <td><input style="border:none" class="form-control" disabled /></td>
                            <td><input style="border:none" class="form-control" disabled /></td>
                            <td><input asp-for="WVAT" style="border:none" class="form-control moneyInput" /></td>
                        </tr>
                    </tbody>
                </table>

                <div class="form-group my-3">
                    <label class="form-label fst-italic">If applicable, upload the certificate.</label>
                    <div class="mb-3">
                        <label for="bir2306" class="form-label">BIR 2306 Form</label>
                        <input class="form-control form-control-sm w-25" name="bir2306" type="file">
                    </div>
                    <div class="mb-3">
                        <label for="bir2307" class="form-label">BIR 2307 Form</label>
                        <input class="form-control form-control-sm w-25" name="bir2307" type="file">
                    </div>
                </div>

                <div class="form-group">
                    <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#AddAccEntry">
                        Add Entry
                    </button>
                    <table class="table">
                        <thead>
                            <tr>
                                <th class="w-100">Account Title</th>
                                <th class="w-20">
                                    Amount
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody id="accountingEntriesBody">
                        </tbody>
                    </table>
                </div>
                <br />
                <div class="row pt-2">
                    <div class="col-6 col-md-3">
                        <button type="submit" class="btn btn-primary form-control">Create</button>
                    </div>
                    <div class="col-6 col-md-3">
                        <a asp-controller="Receipt" asp-action="CollectionIndex" class="btn btn-outline-primary border  form-control ">Back to List</a>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

    <!-- Modal -->
    <div class="modal fade" id="AddAccEntry" tabindex="-1" aria-labelledby="AddAccEntryLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="AddAccEntryLabel">Add Accounting Entry</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group">
                            <label class="control-label">Account Title</label>
                            <select id="AccountTitle" asp-items="@Model.ChartOfAccounts" class="form-select" style="width: 100%">
                                <option></option>
                            </select>
                            <span class="text-danger"></span>
                        </div>
                        <div class="form-group pt-4">
                            <label class="control-label">Amount</label>
                            <input id="AccountAmount" class="form-control moneyInput" value="" placeholder="0.00" />
                            <span class="text-danger"></span>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="saveAccountingEntry()">Create</button>
                </div>
            </div>
        </div>
    </div>



    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
        <script src="~/js/submit-blocker.js"></script>
        <script>
            $(document).ready(function () {
                $("#CustomerId").change(function () {
                    var customerNo = $(this).val();

                    $.ajax({
                        url: "/Receipt/GetSalesInvoices",
                        type: "GET",
                        data: { customerNo: customerNo },
                        success: function (data) {

                            $("#invoices").empty();

                            // Check if data is an array and not null
                            if (Array.isArray(data) && data.length > 0) {

                                $("#invoices").append('<option>');

                                // Iterate over the array and append options
                                $.each(data, function (index, item) {
                                    $("#invoices").append($('<option>', {
                                        value: item.value,   // Use the correct property for value
                                        text: item.text      // Use the correct property for text
                                    }));
                                });
                            } else {
                                // Handle the case where data is null or empty
                                console.log("No sales invoices found for the selected customer.");
                            }
                        }
                    });
                });
            });
        </script>

        <script>
            function saveAccountingEntry() {
                // Get the values from the modal inputs
                var accountTitle = $("#AccountTitle").val();
                var accountTitleText = $("#AccountTitle option:selected").text();
                var accountAmount = parseFloat($("#AccountAmount").val().replace(/,/g, '')) || 0.00;

                if (accountAmount === 0) {
                    event.preventDefault();
                    alert('Please input amount');
                    return;
                } else if (accountTitleText === "") {
                    event.preventDefault();
                    alert('Please select Account No.!');
                    return;
                }

                // Format debit and credit values with commas and two decimal places
                var formattedAmount = accountAmount.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });

                // Create a new row with the text only and a hidden input for the value
                var newRow = `<tr>
                                                        <td>
                                                            <input type='hidden' name='accountTitle' value='${accountTitle}' />
                                                            <input type='text' name='accountTitleText' value='${accountTitleText}' style='border:none' readonly />
                                                        </td>
                                                                    <td><input type='text' name='accountAmount' value='${formattedAmount}' style='border:none' readonly /></td>
                                                        <td><button type='button' class='btn btn-danger btn-sm' onclick='removeRow(this)'>Remove</button></td>
                                                     </tr>`;

                // Append the new row to the table body
                $("#accountingEntriesBody").append(newRow);

                // Close the modal
                $("#AddAccEntry").modal("hide");

                // Clear the modal inputs
                $("#AccountTitle").val(""); // Reset the select to its default state
                $("#AccountTitle").trigger("change"); // Trigger change event for the select
                $("#AccountAmount").val("");
            }


            // Function to remove the corresponding row
            function removeRow(button) {
                // Get the reference to the button's parent row and remove it
                $(button).closest("tr").remove();
            }

        </script>

        <script>
            $(document).ready(function () {
                $("#invoices").change(function () {
                    var siSelect = $("#invoices").val();

                    $(".siList").empty();
                    $(".siAmount").empty();

                    siSelect.forEach(function (siNo) {
                        var siSelectText = $("#invoices option[value='" + siNo + "']").text();
                        var newRow = `<tr>
                                            <td>
                                                <input type='hidden' value='${siNo}' />
                                                <input type='text' value='${siSelectText}' style='border:none' readonly />
                                            </td>
                                                <td><input type='text' name='SIMultipleAmount' class='inputAmount money paymentAmount_${siNo}'/></td>
                                        </tr>`;

                        var siAmount = `<tr id='row_${siNo}'>
                                                            <td style='padding-left:20px;'>
                                                                <input type='hidden' value='${siNo}' />
                                                                <input type='text' value='${siSelectText}' style='border:none' readonly />
                                                            </td>
                                                            <td class="text-end" id='amount_${siNo}'>0.00</td>
                                                            <td class="text-end" id='vatAmount_${siNo}'>0.00</td>
                                                            <td class="text-end" id='ewtAmount_${siNo}'>0.00</td>
                                                            <td class="text-end" id='siAmountNetOfEWT_${siNo}'>0.00</td>
                                                            <td class="text-end" id='amountPaid_${siNo}'>0.00</td>
                                                            <td class="text-end" id='balance_${siNo}' style="padding-right:20px;">0.00</td>
                                                        </tr>`;

                        $(".siList").append(newRow);
                        $(".siAmount").append(siAmount);

                        
                        if (siNo !== "") {
                        // Make an AJAX request to get the balance based on the selected siNo
                        $.ajax({
                            url: "/Receipt/MultipleInvoiceBalance",
                            method: "GET",
                            data: { siNo: siNo },
                            success: function (data) {
                                if (data !== null) {
                                    //compute / show existing SI
                                    var gross = data.amount;
                                    $("#amount_" + siNo).text(gross.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                                    var netAmount = gross / 1.12;
                                    $("#netAmount_" + siNo).text(netAmount.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                                    var vatAmount = data.wvatAmount;
                                    $("#vatAmount_" + siNo).text(vatAmount.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                                    var ewtAmount = data.ewtAmount;
                                    $("#ewtAmount_" + siNo).text(ewtAmount.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                                    var siAmountNetOfEWT = gross - (ewtAmount + vatAmount);
                                    $("#siAmountNetOfEWT_" + siNo).text(siAmountNetOfEWT.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                                    var amountPaid = data.amountPaid
                                    $("#amountPaid_" + siNo).text(amountPaid.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                                    var balance = data.balance
                                    $("#balance_" + siNo).text(balance.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                                    $(".paymentAmount_" + siNo).val(balance.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }));

                                    // Recalculate grand total of existing SI
                                    calculateGrandTotalRRAmount()
                                    paymentInputValue($(".paymentAmount_" + siNo).val().replace(/,/g, ''))
                                }
                            },
                            error: function (xhr, status, error) {
                                console.error('Error fetching balance:', error);
                            }
                        });
                    }
                        
                    });
                    calculateGrandTotalRRAmount()
                });

                function calculateGrandTotalRRAmount() {
                    var grandTotalRRAmount = 0;
                    var grandTotalNetAmount = 0;
                    var grandTotalVatAmount = 0;
                    var grandTotalEWTAmount = 0;
                    var grandTotalNetOfEWT = 0;
                    var grandTotalAmountPaid = 0;
                    var grandTotalBalance = 0;

                    $(".siAmount tr").each(function () {
                        var amount = $(this).find("[id^='amount_']").text();
                        var totalAmount = parseFloat(amount.replace(/,/g, '')) || 0;
                        grandTotalRRAmount += totalAmount;

                        var netAmount = $(this).find("[id^='netAmount_']").text();
                        var totalNetAmount = parseFloat(netAmount.replace(/,/g, '')) || 0;
                        grandTotalNetAmount += totalNetAmount;

                        var vatAmount = $(this).find("[id^='vatAmount_']").text();
                        var totalVatAmount = parseFloat(vatAmount.replace(/,/g, '')) || 0;
                        grandTotalVatAmount += totalVatAmount;

                        var ewtAmount = $(this).find("[id^='ewtAmount_']").text();
                        var totalEwtAmount = parseFloat(ewtAmount.replace(/,/g, '')) || 0;
                        grandTotalEWTAmount += totalEwtAmount;

                        var rrAmountNetOfEWT = $(this).find("[id^='siAmountNetOfEWT_']").text();
                        var totalAmountNetOfEWT = parseFloat(rrAmountNetOfEWT.replace(/,/g, '')) || 0;
                        grandTotalNetOfEWT += totalAmountNetOfEWT;

                        var amountPaid = $(this).find("[id^='amountPaid_']").text();
                        var totalAmountPaid = parseFloat(amountPaid.replace(/,/g, '')) || 0;
                        grandTotalAmountPaid += totalAmountPaid;

                        var balance = $(this).find("[id^='balance_']").text();
                        var totalBalance = parseFloat(balance.replace(/,/g, '')) || 0;
                        grandTotalBalance += totalBalance;
                    });

                    // Update grand total in the table
                    $("#grandTotalRRAmount").text(grandTotalRRAmount.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                    $("#grandTotalNetAmount").text(grandTotalNetAmount.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                    $("#grandTotalVatAmount").text(grandTotalVatAmount.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                    $("#grandTotalEWTAmount").text(grandTotalEWTAmount.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                    $("#grandTotalNetOfEWT").text(grandTotalNetOfEWT.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                    $("#grandTotalAmountPaid").text(grandTotalAmountPaid.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                    $("#grandTotalBalance").text(grandTotalBalance.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                }

            });
        </script>
        <script>
            $('#AccountTitle').select2({
                dropdownParent: $('#AddAccEntry')
            });
        </script>
        <script>
            setTransactionDate();
        </script>
    }
