@using System.ComponentModel.DataAnnotations;
@using Accounting_System.Models.ViewModels;
@model CheckVoucherVM

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<partial name="_Notification">
    <h1>Create</h1>

    <h4>Check Voucher(Non-Trade Invoicing)</h4>
    <hr />

    <form asp-action="Create" method="post" enctype="multipart/form-data">
        <div class="row">
            <div class="col-md-4">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group mb-3">
                    <label class="control-label">Supplier</label>
                    <select asp-for="Header.SupplierId" asp-items="@Model.Header.Suppliers" class="form-select js-select2 supplier">
                        <option></option>
                    </select>
                </div>
                <div class="form-group pb-3">
                    <input type="text" class="form-control" id="supplierAddress" readonly />
                </div>
                <div class="form-group">
                    <input type="text" class="form-control" id="supplierTinNo" readonly />
                </div>
                <div class="form-group">
                    <label class="control-label">PO No.<span class="required">*</span></label>
                    <textarea name="poNo" class="form-control" placeholder="Enter PO No." style="height: 100px"></textarea>
                </div>
                <div class="form-group">
                    <label class="control-label">SI No.<span class="required">*</span></label>
                    <textarea name="siNo" class="form-control" placeholder="Enter SI No." style="height: 100px"></textarea>
                </div>
                <div class="form-group">
                    <label asp-for="Header.Date" class="control-label"></label>
                    <input asp-for="Header.Date" type="Date" class="form-control" />
                    <span asp-validation-for="Header.Date" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Header.Total" class="control-label"></label>
                    <input asp-for="Header.Total" type="text" class="form-control totalAmount" />
                    <span asp-validation-for="Header.Total" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label class="control-label">Upload File (Optional)</label>
                    <input name="file" type="file" class="form-control" />
                </div>
            </div>
            <div class="form-group">
                <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#AddAccEntry">
                    Add Entry
                </button>
                <table class="table">
                    <thead>
                        <tr>
                            <th class="w-50">Account No.</th>
                            <th class="w-25">
                                Debit
                            </th>
                            <th class="w-25">
                                Credit
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody id="accountingEntriesBody">
                        <tr>
                            <td><input type='text' value='2010102 AP-Non Trade Payable' class="w-100" style='border:none' readonly /></td>
                            <td><input type='text' name='netOfEWT' value='0.00' class="w-100" style='border:none' readonly /></td>
                            <td><input type='text' name='apNonTradePayable' value='0.00' class="w-100 netOfEWT" style='border:none' readonly /></td>
                            <td></td>
                        </tr>
                    </tbody>
                    <tbody>
                        <tr>
                            <td class="text-end">TOTAL:</td>
                            <td class="totalDebit">0.00</td>
                            <td class="totalCredit">0.00</td>
                            <td></td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </div>
    </form>

    <!-- Modal -->
    <div class="modal fade" id="AddAccEntry" data-bs-backdrop="static" tabindex="-1" aria-labelledby="AddAccEntryLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="AddAccEntryLabel">Add Accounting Entry</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group">
                            <label class="control-label">Account No.</label>
                            <select asp-items="@Model.Header?.COA" class="form-select automaticEntry" style="width: 100%" id="AccountNo">
                                <option></option>
                            </select>
                            <span class="text-danger"></span>
                        </div>
                        <div class="form-group pt-4">
                            <label class="control-label">Debit</label>
                            <input id="Debit" value="0.00" class="form-control moneyInput" placeholder="0.00" />
                            <span class="text-danger"></span>
                        </div>
                        <div class="form-group pt-4">
                            <label class="control-label">Credit</label>
                            <input id="Credit" value="0.00" class="form-control moneyInput" placeholder="0.00" />
                            <span class="text-danger"></span>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="calculateButton" onclick="saveAccountingEntry()">Create</button>
                </div>
            </div>
        </div>
    </div>

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
        <script>
            $('#AccountNo').select2({
                dropdownParent: $('#AddAccEntry')
            });
        </script>
        <script>
            $(function () {
                $(".supplier").change(function () {
                    var suppId = $(this).val();
                    if (suppId !== "") {
                        // Make an AJAX request to get the TaxType based on the selected SupplierId
                        $.ajax({
                            url: "/CheckVoucher/GetSI",
                            method: "GET",
                            data: { supplierId: suppId },
                            success: function (data) {
                                if (data.address !== null || data.tinNo !== null) {
                                    $("#supplierAddress").val(data.address);
                                    $("#supplierTinNo").val(data.tinNo);
                                } else {
                                    $("#supplierAddress").val("");
                                    $("#supplierTinNo").val("");
                                }
                                $(document).ready(function () {
                                    $("#rrSelect").change(function () {
                                        updateAmounts();
                                    });

                                    $(document).on('input', '.inputAmount', function () {
                                        updateAmounts();
                                    });

                                    $(".totalAmount").on('input', function () {
                                        computation();
                                    });

                                    function computation() {
                                        var netOfEWT = 0;
                                        var totalAmountEWT = 0;
                                        if (data.taxType === "Withholding Tax") {
                                            var totalAmountVal = parseFloat($(".totalAmount").val());
                                            var netOfVatAmount = totalAmountVal / 1.12;
                                            var vatAmount = netOfVatAmount * 0.12;
                                            var ewtAmount = netOfVatAmount * 0.01;
                                            var rrAmountNetOfEWTAmount = totalAmountVal - ewtAmount;
                                            netOfEWT = rrAmountNetOfEWTAmount;
                                            totalAmountEWT = ewtAmount;
                                        } else {
                                            var totalAmountVal = parseFloat($(".totalAmount").val());
                                            netOfEWT = totalAmountVal;
                                        }
                                        $(".netOfEWT").val(netOfEWT.toFixed(2));
                                        $(".ewt").val(totalAmountEWT.toFixed(2));

                                        updateTotalDebitAndCredit();
                                    }

                                    function updateAmounts() {
                                        var amountInputs = document.querySelectorAll('.inputAmount');
                                        var totalNetOfEWT = 0;
                                        var totalEWT = 0;
                                        amountInputs.forEach(function (input) {
                                            if (data.taxType === "Withholding Tax") {
                                                var rrAmount = parseFloat(input.value);
                                                var netOfVat = rrAmount / 1.12;
                                                var vat = netOfVat * 0.12;
                                                var ewt = netOfVat * 0.01;
                                                var rrAmountNetOfEWT = rrAmount - ewt;
                                                totalNetOfEWT += rrAmountNetOfEWT;
                                                totalEWT += ewt;
                                            } else {
                                                var rrAmount = parseFloat(input.value);
                                                totalNetOfEWT += rrAmount;
                                            }
                                        });
                                        $(".totalNetOfEWT").val(totalNetOfEWT.toFixed(2));
                                        $(".totalEWT").val(totalEWT.toFixed(2));
                                        updateTotalDebitAndCredit();
                                    }

                                    $("#rrSelect").trigger("change");
                                });
                            },
                            error: function (xhr, status, error) {
                                console.error('Error fetching TaxType:', error);
                            }
                        });
                    } else {
                        $("#supplierAddress").val("");
                        $("#supplierTinNo").val("");
                    }
                });
            });
        </script>
        <script>
            function saveAccountingEntry() {
                // Get the values from the modal inputs
                var accountNumber = $("#AccountNo").val();
                var accountNumberText = $("#AccountNo option:selected").text();
                var debit = $("#Debit").val();
                var credit = $("#Credit").val();

                // Create a new row with the text only and a hidden input for the value
                var newRow = `<tr>
                                                            <td>
                                                                <input type='hidden' name='accountNumber' value='${accountNumber}'/>
                                                                <input type='text' name='accountNumberText' value='${accountNumberText}' style='border:none' class='w-100' readonly />
                                                            </td>
                                                            <td><input name='debit' id='debit_${accountNumber}' value='${debit}' style='border:none' class='w-100' readonly /></td>
                                                            <td><input name='credit' id='credit_${accountNumber}' value='${credit}' style='border:none' class='w-100' readonly /></td>
                                                            <td><button type='button' class='btn btn-danger btn-sm' onclick='removeRow(this)'>Remove</button></td>
                                                     </tr>`;

                // Append the new row to the table body
                $("#accountingEntriesBody").append(newRow);

                // Close the modal
                $("#AddAccEntry").modal("hide");

                // Clear the modal inputs
                $("#AccountNo").val(""); // Reset the select to its default state
                $("#AccountNo").trigger("change"); // Trigger change event for the select
                $("#Debit").val("0.00");
                $("#Credit").val("0.00");

                updateTotalDebitAndCredit();
            }

            $(document).ready(function () {
                $("#calculateButton").click(updateTotalDebitAndCredit);
            });

            function updateTotalDebitAndCredit() {
                var totalDebit = 0;
                var totalDebitAmount = 0;
                var totalCredit = 0;
                var totalCreditAmount = 0;
                var creditAcctEntries = 0;

                // Loop through each row in the table body and sum up the debit values
                $("#accountingEntriesBody tr").each(function () {
                    var debitInput = $(this).find("td:eq(1) input").val();
                    var creditInput = $(this).find("td:eq(2) input").val();
                    // Ensure debitInput and creditInput are strings before using replace
                    debitInput = debitInput ? String(debitInput) : ""; // convert to string if not null/undefined
                    creditInput = creditInput ? String(creditInput) : "";

                    var debit = parseFloat(debitInput.replace(/,/g, '')) || 0;
                    var credit = parseFloat(creditInput.replace(/,/g, '')) || 0;

                    totalDebit += debit;
                    totalCredit += credit;
                });
                // Display the total debit value
                $(".totalDebit").text(totalDebit.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                $(".totalCredit").text(totalCredit.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
            }

            // Function to remove the corresponding row
            function removeRow(button) {
                // Get the reference to the button's parent row and remove it
                $(button).closest("tr").remove();
                updateTotalDebitAndCredit();
            }
        </script>
        <script>
            $(function automaticEntry() {
                $(".automaticEntry").change(function () {
                    var coaNo = $(this).val(); // Get all selected POIds
                    if (coaNo && coaNo.length > 0) {
                        if (coaNo.includes("10201") || coaNo.includes("10105")) {
                            $("#AddAccEntry").modal("hide");
                            Swal.fire({
                                title: 'Automatic JV Entry',
                                html:
                                    'Do you want to automatic insert JV entry records based on CV?<br/><br/>' +
                                    'When to start? <br/><input id="startDate" type="month" class="form-control">' +
                                    'When to end? <br/><input id="endDate" type="month" class="form-control">',
                                allowOutsideClick: false, // Prevent closing on outside click
                                allowEscapeKey: false,  // Prevent closing with Esc key
                                showCancelButton: true,
                                confirmButtonText: "Yes, confirm!",
                                cancelButtonText: "No, N/A!",
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    const startDate = document.getElementById('startDate').value;
                                    const endDate = document.getElementById('endDate').value;
                                    $("#AddAccEntry").modal("show");
                                    if (startDate !== null && endDate !== null) {
                                        var form = document.getElementById("myform");

                                        form.appendChild(createHiddenInput("startDate", startDate));
                                        form.appendChild(createHiddenInput("endDate", endDate));
                                    } else {
                                        console.error('Invalid');
                                    }
                                } else {
                                    console.log('User canceled');
                                    $("#AddAccEntry").modal("show");
                                }
                            });
                        }
                    } else {

                    }
                });
            });

            //for including input value in form
            function createHiddenInput(name, value) {
                var input = document.createElement("input");
                input.type = "hidden";
                input.name = name;
                input.value = value;
                return input;
            }
        </script>
    }
