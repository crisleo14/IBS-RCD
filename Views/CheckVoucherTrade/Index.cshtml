@model IEnumerable<Accounting_System.Models.AccountsPayable.CheckVoucherHeader>
@{
    ViewData["Title"] = "Check Voucher Trade";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="~/css/indexLayout.css" asp-append-version="true" />

<div class="card shadow border-0 mt-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">CHECK VOUCHER TRADE</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4 table-responsive">
        <div class="row pb-3">
            <div class="col-6">
            </div>
            <div class="col-6 text-end">
                <a asp-controller="CheckVoucherTrade" asp-action="Create" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i> New Payment
                </a>
            </div>
        </div>
        <table class="table table-bordered table-hover" id="paginatedTable">
            <thead class="bg-light">
            <tr>
                <th class="text-start">CV#</th>
                <th class="text-start">Date</th>
                <th class="text-start">Supplier</th>
                <th class="text-start">Total</th>
                <th class="text-start">CV Type</th>
                <th class="text-start">Created By</th>
                <th class="text-start">Status</th>
                <th class="text-center" style="width: 100px;">Actions</th>
            </tr>
            </thead>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        function confirmVoid(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Replace with the actual URL that you want to redirect to
                    
                    window.location.href = `@Url.Action("Void", "CheckVoucherTrade")/${id}`;
                }
            })
        }
    </script>
    <script>
        function confirmCancel(id) {
            Swal.fire({
                title: "Please Input Remarks",
                html:
                    "<input id='cancellationRemarks' type='text' class='swal2-input' placeholder='Remarks'>",
                focusConfirm: false,
                allowEscapeKey: false,
                allowOutsideClick: false,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.isConfirmed) {
                    let cancellationRemarks = $("#cancellationRemarks").val();
                    // Encode the cancellationRemarks to make it URL safe
                    let encodedRemarks = encodeURIComponent(cancellationRemarks);
                    // Append the encoded remarks as a parameter in the URL
                    
                    window.location.href = `@Url.Action("Cancel", "CheckVoucherTrade")?id=${id}&cancellationRemarks=${encodedRemarks}`;
                }
            })
        }
    </script>
    <script>
        $(document).ready(function() {
            $('#paginatedTable').DataTable({
                "processing": true, // Enable processing indicator
                "serverSide": true, // Enable server-side processing
                "stateSave" : true,
                "stateDuration": 86400,
                "language": {
                    "processing": `<div class="d-flex justify-content-center">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                 </div>`
                },
                "ajax": {
                    "url": "@Url.Action("GetCheckVouchers", "CheckVoucherTrade")",
                    "type": "POST",
                    "data": function (d) {
                        return $.extend({}, d, {
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        });
                    },
                    "error": function (xhr, error) {
                        console.error('DataTables error:', error);
                        alert('An error occurred while loading the data');
                    }
                },
                "preDrawCallback": function() {
                    $('#paginatedTable').addClass('table-loading');
                },
                "drawCallback": function() {
                    $('#paginatedTable').removeClass('table-loading');

                    // Initialize all tooltips
                    $('[data-bs-toggle="tooltip"]').tooltip();
                },
                "columns": [
                    { "data": "checkVoucherHeaderNo" },
                    {
                        "data": "date",
                        "name": "date",
                        "render": function (data) {
                            // Assuming 'Date' is in ISO format like "2024-07-12T00:00:00"
                            let date = new Date(data);
                            return date.toLocaleDateString('en-US', {
                                year: 'numeric',
                                month: 'short',
                                day: '2-digit'
                            });
                        }
                    },
                    { "data": "supplier.supplierName" },
                    {
                        "data": "total",
                        "render": function (data) {
                            let amount = $.fn.dataTable.render.number(',', '.', 2).display(data);
                            return `<span class="d-block fw-medium">${amount}</span>`;
                        }
                    },
                    {
                        "data": "cvType",
                        "render": function (data, type, row) {
                            let cvType = row.category + ' - ' + row.cvType;

                            return `<span class="d-block fw-medium">${cvType}</span>`;
                        }
                    },
                    { "data": "createdBy" },
                    {
                        "data": null,
                        "render": function (data, type, row) {
                            let status = row.isPosted && !row.isVoided && !row.isCanceled
                                ? "Posted"
                                : row.isVoided
                                    ? "Voided"
                                    : row.isCanceled
                                        ? "Cancelled"
                                        : "Pending";
                            let statusClass = status === "Posted" ? "bg-info" :
                                status === "Voided" ? "bg-danger" :
                                    status === "Cancelled" ? "bg-warning" : "";
                            return `<span class="badge rounded-pill ${statusClass}">${status}</span>`;
                        }
                    },
                    {
                        "data": "checkVoucherHeaderId",
                        "orderable": false,
                        "render": function (data, type, row) {
                            return dropdown = `<div class="dropdown actions-dropdown" style="${row.isVoided || row.isCanceled || row.cvType !== 'Supplier' ? 'display:none;' : ''}">
                                         <button class="btn btn-light btn-sm dropdown-toggle w-100" 
                                                    type="button" 
                                                    data-bs-toggle="dropdown" 
                                                    aria-expanded="false">
                                                <i class="bi bi-three-dots"></i>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-end shadow-sm">
                                            ${!row.isPosted ? `
                                                <li><a class="dropdown-item" href="@Url.Action("Edit", "CheckVoucherTrade")/${data}">Edit</a></li>
                                                <li><a class="dropdown-item" href="@Url.Action("Print", "CheckVoucherTrade")/${data}">Preview</a></li>
                                                <li><a class="dropdown-item" href="javascript:void(0);" onclick="confirmCancel(${data})">Cancel</a></li>
                                            ` : `
                                                <li><a class="dropdown-item" href="@Url.Action("Print", "CheckVoucherTrade")/${data}">Print</a></li>
                                                ${row.amountPaid === 0 ? `
                                                    <li><a class="dropdown-item" href="javascript:void(0);" onclick="confirmVoid(${data})">Void</a></li>
                                                ` : `
                                                    <li><button class="dropdown-item" disabled readonly>Void</button></li>
                                                `}
                                            `}
                                        </ul>
                                    </div>`;
                        }
                    }
                ],
                "order": [[0, "asc"]], // Default sort by TransactionDate
                "pageLength": 10 // Default number of rows per page
            });
        });
    </script>
}