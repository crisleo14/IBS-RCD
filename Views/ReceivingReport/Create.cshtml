@using Accounting_System.Models.AccountsPayable
@model ReceivingReport

@{
    ViewData["Title"] = "CREATE RECEIVING REPORT";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="loader-container">
    <div class="loader"></div>
    <div class="loader-text">Loading...</div>
</div>
<div class="card shadow border-0 mt-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">@ViewData["Title"]</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <div class="position-absolute p-2" style="left:40%; width:35%; border:dotted 1px;">
            <pre>
            <b>PO Liquidations</b>

   PO No: <span id="poNo" class="fw-bold"></span> - Quantity: <span id="poQuantity" class="fw-bold"></span>

   Posted RR:
            <ul id="rrListPostedOnly" style="margin: 0;"></ul>
=====================================================================
   Remaining Quantity (Only posted RR):  <span id="remainingQuantityPostedOnly"></span>
=====================================================================

   Unposted RR:
            <ul id="rrListCanceled" style="margin: 0;"></ul>
            <ul id="rrListNotPosted" style="margin: 0;"></ul>
=====================================================================
   Remaining Quantity (Including posted and unposted RR):  <span id="remainingQuantity"></span>
=====================================================================

           </pre>
        </div>
        <form asp-action="Create">
            <div class="col-md-4">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group mb-3">
                    <label asp-for="Date" class="control-label"></label><span class="required">*</span>
                    <input asp-for="Date" type="date" class="form-control" />
                    <span asp-validation-for="Date" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="POId" class="control-label">Suppliers PO No.</label><span class="required">*</span>
                    <select asp-for="POId" class="form-control js-select2" asp-items="@Model.PurchaseOrders" style="width:100%">
                        <option></option>
                    </select>
                    <span asp-validation-for="POId" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="ReceivedDate" type="date" class="form-control" placeholder="" />
                    <label asp-for="ReceivedDate" class="control-label">Received Date</label>
                    <span asp-validation-for="ReceivedDate" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="SupplierInvoiceNumber" class="form-control" placeholder="" />
                    <label asp-for="SupplierInvoiceNumber" class="control-label"></label>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="SupplierInvoiceDate" class="control-label"></label>
                    <input asp-for="SupplierInvoiceDate" type="date" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="TruckOrVessels" class="form-control" placeholder="" />
                    <label asp-for="TruckOrVessels" class="control-label">Truck/Vessels<span class="required">*</span></label>
                    <span asp-validation-for="TruckOrVessels" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="QuantityDelivered" class="form-control" placeholder="" />
                    <label asp-for="QuantityDelivered" class="control-label">Qty Delivered<span class="required">*</span></label>
                    <span asp-validation-for="QuantityDelivered" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="QuantityReceived" class="form-control" placeholder="" />
                    <label asp-for="QuantityReceived" class="control-label">Qty Received<span class="required">*</span></label>
                    <span asp-validation-for="QuantityReceived" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="OtherRef" class="form-control" placeholder="" />
                    <label asp-for="OtherRef" class="control-label"></label>
                </div>
                <div class="form-floating mb-3">
                    <textarea asp-for="Remarks" class="form-control" placeholder="" style="height: 100px"></textarea>
                    <label asp-for="Remarks" class="control-label">Remarks<span class="required">*</span></label>
                    <span asp-validation-for="Remarks" class="text-danger"></span>
                </div>
            </div>
            <div class="row pt-2">
                <div class="col-6 col-md-3">
                    <button type="submit" class="btn btn-primary form-control">Create</button>
                </div>
                <div class="col-6 col-md-3">
                    <a asp-controller="ReceivingReport" asp-action="Index" class="btn btn-outline-primary border  form-control ">Back to List</a>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.getElementById('Date').value = new Date().toISOString().substring(0, 10);
    </script>

    <script>
        // Function to handle invoice change event
        function handlePoChange() {
            var id = $("#POId").val();
            console.log(id);
            if (id != "") {
                $.ajax({
                    url: "/ReceivingReport/GetLiquidations",
                    type: "GET",
                    data: { id: id },
                    success: function (data) {
                        console.log(data);
                        // Update PO No and Quantity
                        document.getElementById("poNo").innerHTML = data.poNo;
                        document.getElementById("poQuantity").innerHTML = data.poQuantity;

                        // Calculate and update Remaining Quantity
                        var totalReceived = 0;
                        for (var i = 0; i < data.rrList.length; i++) {
                            totalReceived += data.rrList[i].quantityReceived;
                        }
                        var totalReceivedPostedOnly = 0;
                        for (var i = 0; i < data.rrListPostedOnly.length; i++) {
                            totalReceivedPostedOnly += data.rrListPostedOnly[i].quantityReceived;
                        }

                        var remainingQuantityPostedOnly = parseFloat(data.poQuantity.replace(/,/g, '')) - totalReceivedPostedOnly;
                        var remainingQuantity = parseFloat(data.poQuantity.replace(/,/g, '')) - totalReceived;

                        // Format the remaining quantity with thousand's comma
                        var formattedRemainingQuantityPostedOnly = formatNumberWithCommas(remainingQuantityPostedOnly);
                        var formattedRemainingQuantity = formatNumberWithCommas(remainingQuantity);

                        // Display the formatted remaining quantity
                        document.getElementById("remainingQuantityPostedOnly").innerHTML = formattedRemainingQuantityPostedOnly + "L";
                        document.getElementById("remainingQuantity").innerHTML = formattedRemainingQuantity + "L";

                        var rrListPostedOnly = data.rrListPostedOnly;
                        var rrListPostedOnlyUl = document.getElementById("rrListPostedOnly");
                        rrListPostedOnlyUl.innerHTML = ""; // Clear previous list items

                        var rrListNotPosted = data.rrListNotPosted;
                        var rrListNotPostedUl = document.getElementById("rrListNotPosted");
                        rrListNotPostedUl.innerHTML = ""; // Clear previous list items

                        var rrListCanceled = data.rrListCanceled;
                        var rrListCanceledUl = document.getElementById("rrListCanceled");
                        rrListCanceledUl.innerHTML = ""; // Clear previous list items

                        for (var i = 0; i < rrListPostedOnly.length; i++) {
                            var rrPostedOnly = rrListPostedOnly[i];
                            var list = document.createElement("li");
                            list.textContent = rrPostedOnly.quantityReceived < rrPostedOnly.quantityDelivered ? "RR No: " + rrPostedOnly.rrNo + " - Quantity: -" + rrPostedOnly.quantityReceived.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) : "RR No: " + rrPostedOnly.rrNo + " - Quantity: -" + rrPostedOnly.quantityDelivered.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
                            rrListPostedOnlyUl.appendChild(list);
                        }

                        for (var i = 0; i < rrListNotPosted.length; i++) {
                            var rrNotPosted = rrListNotPosted[i];
                            var li = document.createElement("li");
                            li.textContent = rrNotPosted.quantityReceived < rrNotPosted.quantityDelivered ? "RR No: " + rrNotPosted.rrNo + " - Quantity: -" + rrNotPosted.quantityReceived.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) : "RR No: " + rrNotPosted.rrNo + " - Quantity: -" + rrNotPosted.quantityDelivered.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
                            rrListNotPostedUl.appendChild(li);
                        }

                        for (var i = 0; i < rrListCanceled.length; i++) {
                            var rrCanceled = rrListCanceled[i];
                            var listed = document.createElement("li");
                            listed.textContent = rrCanceled.quantityReceived < rrCanceled.quantityDelivered ? "RR No: " + rrCanceled.rrNo + " - Quantity: -" + rrCanceled.canceledQuantity.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) + " (Cancelled)" : "RR No: " + rrCanceled.rrNo + " - Quantity: -" + rrCanceled.canceledQuantity.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) + " (Cancelled)";
                            rrListCanceledUl.appendChild(listed);
                        }
                    }
                });
            }
        }

        function formatNumberWithCommas(number) {
            return number.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
        }


        $(document).ready(function () {
            // Call the handleInvoiceChange function on page load
            handlePoChange();

            // Attach event listener to invoice dropdown
            $("#POId").change(function () {
                // Call the handleInvoiceChange function when the dropdown changes
                handlePoChange();
            });
        });
    </script>
    <script>
        setTransactionDate();
    </script>
}
